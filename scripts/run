#!/usr/bin/env node

const yargs = require('yargs');
const migrate = require('./migrate.js');
const logger = require('../src/middleware/winston.js');

/* eslint-disable */
yargs.command({
    command: 'migrate',
    usage:'$0 migrate',
    describe: 'Migrate Database.',
    handler: argv => {
        logger.info('Running migrations 🏃‍');
        migrate.migrate().then(() => {
            logger.info('Migrations complete ✔️');
            process.exit();
        }).catch((err) => {
            logger.error(err);
            process.exit();
        });
    }
}).command({
    command: 'migrate:undo',
    usage:'$0 migrate:undo',
    describe: 'Undo last Migration.',
    handler: argv => {
        logger.info('Undoing last migration ↩️');
        migrate.migrateUndo().then(() => {
            logger.info('complete ✔️');
            process.exit();
        }).catch((err) => {
            logger.error(err);
            process.exit();
        });
    }
}).command({
    command: 'migrate:undo:all',
    usage:'$0 migrate:undo:all',
    describe: 'Undo all Migrations.',
    handler: argv => {
        logger.info('Undoing all migrations ↩️');
        migrate.migrateUndoAll().then(() => {
            logger.info('complete ✔️');
            process.exit();
        }).catch((err) => {
            logger.error(err);
            process.exit();
        });
    }
}).command({
    command: 'seed',
    usage:'$0 seed',
    describe: 'Seed Database.',
    handler: argv => {
        logger.info('Running seeds 🏃‍');
        migrate.seed().then(() => {
            logger.info('Seeding complete ✔️');
            process.exit();
        }).catch((err) => {
            logger.error(err);
            process.exit();
        });
    }
}).command({
    command: 'seed:undo',
    usage:'$0 seed:undo',
    describe: 'Undo last Seed.',
    handler: argv => {
        logger.info('Undoing last seed ↩️');
        migrate.seedUndo().then(() => {
            logger.info('complete ✔️');
            process.exit();
        }).catch((err) => {
            logger.error(err);
            process.exit();
        });
    }
}).command({
    command: 'seed:undo:all',
    usage:'$0 seed:undo:all',
    describe: 'Undo all seeds.',
    handler: argv => {
        logger.info('Undoing all seeds ↩️');
        migrate.seedUndoAll().then(() => {
            logger.info('complete ✔️');
            process.exit();
        }).catch((err) => {
            logger.error(err);
            process.exit();
        });
    }
}).demandCommand(1, 'You must choose a command').argv;